// Generated by CoffeeScript 1.4.0
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  $(document).ready(function() {
    return $('#main').click(function(event) {
      var base_walk, c_walk, color, data, msg, parentOffset, q, r, roughness, sr, walkable_hexes, x, y, _i, _len, _ref, _ref1, _results;
      if (root.data != null) {
        x = event.pageX;
        y = event.pageY;
        parentOffset = $(this).parent().offset();
        x -= parentOffset.left;
        y -= parentOffset.top;
        _ref = hex_lib.xy_to_qr(x, y), q = _ref[0], r = _ref[1];
        data = hex_lib.xy_to_hex_data(x, y);
        if (data != null) {
          color = data.color;
          roughness = data['data']['ground_strength'];
          msg = "" + color + " - " + roughness + " - (" + data.q + "," + data.r + ")";
          $('#info').hide();
          $('#info').text(msg);
          $('#info').css('top', y + 100);
          $('#info').css('left', x + 50);
          $('#info').show();
          base_walk = $('#walk_base');
          walkable_hexes = root.walkable(q, r, 6);
          $('.cloned_walk').remove();
          _results = [];
          for (_i = 0, _len = walkable_hexes.length; _i < _len; _i++) {
            sr = walkable_hexes[_i];
            c_walk = base_walk.clone();
            _ref1 = hex_lib.qr_to_xy(sr[0], sr[1]), x = _ref1[0], y = _ref1[1];
            c_walk.css('top', y - 2);
            c_walk.css('left', x - 2);
            c_walk.addClass('cloned_walk');
            $('#main').append(c_walk);
            _results.push(c_walk.show());
          }
          return _results;
        }
      }
    });
  });

}).call(this);
