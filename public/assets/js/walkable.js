// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.walkable = function(q, r, max_cost) {
    var compareNumbers, cost_so_far, current, frontier, new_cost, next, priority, walk, _i, _len, _ref;
    compareNumbers = function(a, b) {
      return a.weight - b.weight;
    };
    frontier = new PriorityQueue({
      comparator: compareNumbers
    });
    frontier.queue({
      data: [q, r],
      weight: 0
    });
    cost_so_far = {};
    cost_so_far[[q, r]] = 0;
    walk = [];
    while (frontier.length > 0) {
      current = frontier.dequeue().data;
      if (current != null) {
        _ref = hex_lib.surrounding_hexes(current[0], current[1]);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          next = _ref[_i];
          new_cost = cost_so_far[current] + hex_lib.hex_cost(current[0], current[1]);
          if (new_cost < max_cost && (!(cost_so_far[next] != null) || new_cost < cost_so_far[next])) {
            if (__indexOf.call(walk, next) < 0) {
              walk.push(next);
            }
            cost_so_far[next] = new_cost;
            priority = new_cost;
            frontier.queue({
              data: next,
              weight: priority
            });
          }
        }
      }
    }
    return walk;
  };

}).call(this);
