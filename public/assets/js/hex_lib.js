// Generated by CoffeeScript 1.4.0
(function() {
  var directions, hex_height, hex_ray, hex_width, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  window.hex_lib = {};

  directions = [[0, -1], [1, -1], [1, 0], [0, 1], [-1, +1], [-1, 0]];

  hex_ray = 16;

  hex_height = hex_ray * 2;

  hex_width = (Math.sqrt(3) * hex_height) / 2.0;

  hex_lib.xy_to_qr = function(x, y) {
    var q, r;
    x -= hex_width / 2.0;
    y -= hex_height / 2.0;
    q = Math.round((x * Math.sqrt(3) / 3.0 - y / 3.0) / hex_ray);
    r = Math.round(y * 2.0 / 3.0 / hex_ray);
    return [q, r];
  };

  hex_lib.qr_to_xy = function(q, r) {
    var x, y;
    x = Math.round(hex_ray * Math.sqrt(3) * (q + (r / 2.0)));
    y = Math.round(hex_ray * 3.0 / 2.0 * r);
    x += hex_width / 2.0;
    y += hex_height / 2.0;
    return [x, y];
  };

  hex_lib.qr_to_hex_data = function(q, r) {
    var key;
    key = "[" + q + ", " + r + "]";
    return root.data[key];
  };

  hex_lib.xy_to_hex_data = function(x, y) {
    var q, r, _ref;
    _ref = hex_lib.xy_to_qr(x, y), q = _ref[0], r = _ref[1];
    return hex_lib.qr_to_hex_data(q, r);
  };

  hex_lib.surrounding_hexes = function(q, r) {
    var direction, _directions, _i, _len;
    _directions = [];
    for (_i = 0, _len = directions.length; _i < _len; _i++) {
      direction = directions[_i];
      if (hex_lib.qr_to_hex_data(direction[0] + q, direction[1] + r) != null) {
        _directions.push([direction[0] + q, direction[1] + r]);
      }
    }
    return _directions;
  };

  hex_lib.hex_cost = function(q, r) {
    var h, malus;
    h = hex_lib.qr_to_hex_data(q, r);
    if (h != null) {
      malus = 0;
      if (h['data']['water']) {
        malus = 2;
      }
      if (h['data']['fertility']) {
        malus = -1;
      }
      return h['data']['ground_strength'] + malus;
    }
  };

}).call(this);
